{"ast":null,"code":"import { useRouter } from 'vue-router';\nimport { ref } from '@vue/reactivity';\nimport Modal from \"@/components/DeleteModal.vue\";\nexport default {\n  props: {\n    todos: {\n      type: Array,\n      required: true,\n      completed: false\n    }\n  },\n  components: {\n    Modal\n  },\n  emits: ['toggle-todo', 'delete-todo'],\n\n  setup(props, {\n    emit\n  }) {\n    const router = useRouter();\n    const isDelete = ref(false);\n    const wantDeleteId = ref(null);\n\n    const toggleTodo = (index, e) => {\n      emit('toggle-todo', index, e.target.checked);\n    };\n\n    const deleteTodo = () => {\n      emit('delete-todo', wantDeleteId.value);\n      closeModal();\n    };\n\n    const showDelete = index => {\n      isDelete.value = true;\n      wantDeleteId.value = index;\n    };\n\n    const moveToPage = todoId => {\n      router.push({\n        name: 'Todo',\n        params: {\n          id: todoId\n        }\n      });\n    };\n\n    const todoStyle = {\n      //:style\n      textDecoration: 'line-through',\n      color: 'gray'\n    };\n\n    const closeModal = () => {\n      isDelete.value = false;\n      wantDeleteId.value = null;\n    };\n\n    return {\n      toggleTodo,\n      deleteTodo,\n      moveToPage,\n      todoStyle,\n      closeModal,\n      showDelete,\n      isDelete\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA2BI,SACIA,SADJ,QAEO,YAFP;AAGA,SACIC,GADJ,QAEO,iBAFP;AAGA,OAAOC,KAAP,MAAkB,8BAAlB;AAEA,eAAe;AACXC,OAAK,EAAE;AACHC,SAAK,EAAE;AACHC,UAAI,EAAEC,KADH;AAEHC,cAAQ,EAAE,IAFP;AAGHC,eAAS,EAAE;AAHR;AADJ,GADI;AAQXC,YAAU,EAAE;AACRP;AADQ,GARD;AAWXQ,OAAK,EAAE,CAAC,aAAD,EAAgB,aAAhB,CAXI;;AAYXC,OAAK,CAACR,KAAD,EAAQ;AACTS;AADS,GAAR,EAEF;AACC,UAAMC,MAAK,GAAIb,SAAS,EAAxB;AACA,UAAMc,QAAO,GAAIb,GAAG,CAAC,KAAD,CAApB;AACA,UAAMc,YAAW,GAAId,GAAG,CAAC,IAAD,CAAxB;;AAEA,UAAMe,UAAS,GAAI,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC7BN,UAAI,CAAC,aAAD,EAAgBK,KAAhB,EAAuBC,CAAC,CAACC,MAAF,CAASC,OAAhC,CAAJ;AACJ,KAFA;;AAGA,UAAMC,UAAS,GAAI,MAAM;AACrBT,UAAI,CAAC,aAAD,EAAgBG,YAAY,CAACO,KAA7B,CAAJ;AACAC,gBAAU;AACd,KAHA;;AAIA,UAAMC,UAAS,GAAKP,KAAD,IAAW;AAC1BH,cAAQ,CAACQ,KAAT,GAAiB,IAAjB;AACAP,kBAAY,CAACO,KAAb,GAAqBL,KAArB;AACJ,KAHA;;AAKA,UAAMQ,UAAS,GAAKC,MAAD,IAAY;AAC3Bb,YAAM,CAACc,IAAP,CAAY;AACRC,YAAI,EAAE,MADE;AAERC,cAAM,EAAE;AACJC,YAAE,EAAEJ;AADA;AAFA,OAAZ;AAMJ,KAPA;;AAQA,UAAMK,SAAQ,GAAI;AAAE;AAChBC,oBAAc,EAAE,cADF;AAEdC,WAAK,EAAE;AAFO,KAAlB;;AAKA,UAAMV,UAAS,GAAI,MAAM;AACrBT,cAAQ,CAACQ,KAAT,GAAiB,KAAjB;AACAP,kBAAY,CAACO,KAAb,GAAqB,IAArB;AAEH,KAJD;;AAMA,WAAO;AACHN,gBADG;AAEHK,gBAFG;AAGHI,gBAHG;AAIHM,eAJG;AAKHR,gBALG;AAMHC,gBANG;AAOHV;AAPG,KAAP;AAWH;;AA7DU,CAAf","names":["useRouter","ref","Modal","props","todos","type","Array","required","completed","components","emits","setup","emit","router","isDelete","wantDeleteId","toggleTodo","index","e","target","checked","deleteTodo","value","closeModal","showDelete","moveToPage","todoId","push","name","params","id","todoStyle","textDecoration","color"],"sourceRoot":"","sources":["C:\\Users\\sisia\\Desktop\\new_vue\\new vue\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div v-for=\"(todo, index) in todos\" :key=\"todo.id\" class=\"card mt-2\">\r\n\r\n            <div class=\"card-body p-2 d-flex align-items-center\" style=\"cursor: pointer\" @click=\"moveToPage(todo.id)\">\r\n                <div class=\"form-check flex-grow-1\">\r\n                    <input type=\"checkbox\" class=\"form-check-input\" :checked=\"todo.completed\"\r\n                        @click.stop=\"toggleTodo(index, $event)\">\r\n                    <span :class=\"{todo: todo.completed}\" class=\"form-check-label\">\r\n                        {{ todo.subject }}</span>\r\n                    <!-- :class=\"{todo: todo.completed}\" \r\n                    :style=\"todo.completed?todoStyle:{}\" -->\r\n                </div>\r\n                <div>\r\n                    <button class=\"btn btn-danger btn-sm\" @click.stop=\"showDelete(index)\">삭제</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        <teleport to=\"#modal\">\r\n            <Modal v-if=\"isDelete\" @close='closeModal' @delete-modal='deleteTodo'>\r\n            </Modal>\r\n        </teleport>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import {\r\n        useRouter\r\n    } from 'vue-router'\r\n    import {\r\n        ref\r\n    } from '@vue/reactivity';\r\n    import Modal from \"@/components/DeleteModal.vue\"\r\n\r\n    export default {\r\n        props: {\r\n            todos: {\r\n                type: Array,\r\n                required: true,\r\n                completed: false,\r\n            }\r\n        },\r\n        components: {\r\n            Modal\r\n        },\r\n        emits: ['toggle-todo', 'delete-todo'],\r\n        setup(props, {\r\n            emit\r\n        }) {\r\n            const router = useRouter();\r\n            const isDelete = ref(false);\r\n            const wantDeleteId = ref(null);\r\n\r\n            const toggleTodo = (index, e) => {\r\n                emit('toggle-todo', index, e.target.checked)\r\n            }\r\n            const deleteTodo = () => {\r\n                emit('delete-todo', wantDeleteId.value);\r\n                closeModal()\r\n            }\r\n            const showDelete = (index) => {\r\n                isDelete.value = true;\r\n                wantDeleteId.value = index\r\n            }\r\n\r\n            const moveToPage = (todoId) => {\r\n                router.push({\r\n                    name: 'Todo',\r\n                    params: {\r\n                        id: todoId\r\n                    }\r\n                })\r\n            }\r\n            const todoStyle = { //:style\r\n                textDecoration: 'line-through',\r\n                color: 'gray',\r\n            };\r\n\r\n            const closeModal = () => {\r\n                isDelete.value = false;\r\n                wantDeleteId.value = null\r\n\r\n            };\r\n\r\n            return {\r\n                toggleTodo,\r\n                deleteTodo,\r\n                moveToPage,\r\n                todoStyle,\r\n                closeModal,\r\n                showDelete,\r\n                isDelete,\r\n\r\n\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .todo {\r\n        /* :class */\r\n        text-decoration: line-through;\r\n        color: gray;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module"}