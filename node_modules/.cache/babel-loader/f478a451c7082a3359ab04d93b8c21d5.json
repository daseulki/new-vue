{"ast":null,"code":"import { onUnmounted, ref } from 'vue';\nexport const useToast = () => {\n  const showToast = ref(false);\n  const toastMessage = ref('');\n  const toastAlertType = ref('');\n  const timeout = ref(null);\n\n  const triggerToast = (message, type = 'success') => {\n    showToast.value = true;\n    toastAlertType.value = type;\n    toastMessage.value = message;\n    timeout.value = setTimeout(() => {\n      toastMessage.value = '';\n      showToast.value = false;\n      toastAlertType.value = '';\n    }, 3000);\n  };\n\n  onUnmounted(() => {\n    clearTimeout(timeout.value);\n  });\n  return {\n    showToast,\n    toastMessage,\n    toastAlertType,\n    triggerToast\n  };\n};","map":{"version":3,"sources":["E:/vue/vue_todo/src/composables/toast.js"],"names":["onUnmounted","ref","useToast","showToast","toastMessage","toastAlertType","timeout","triggerToast","message","type","value","setTimeout","clearTimeout"],"mappings":"AAAA,SACIA,WADJ,EAEIC,GAFJ,QAGO,KAHP;AAKA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,QAAMC,SAAS,GAAGF,GAAG,CAAC,KAAD,CAArB;AACA,QAAMG,YAAY,GAAGH,GAAG,CAAC,EAAD,CAAxB;AACA,QAAMI,cAAc,GAAGJ,GAAG,CAAC,EAAD,CAA1B;AAEA,QAAMK,OAAO,GAAGL,GAAG,CAAC,IAAD,CAAnB;;AACA,QAAMM,YAAY,GAAG,CAACC,OAAD,EAAUC,IAAI,GAAG,SAAjB,KAA+B;AAChDN,IAAAA,SAAS,CAACO,KAAV,GAAkB,IAAlB;AACAL,IAAAA,cAAc,CAACK,KAAf,GAAuBD,IAAvB;AACAL,IAAAA,YAAY,CAACM,KAAb,GAAqBF,OAArB;AAEAF,IAAAA,OAAO,CAACI,KAAR,GAAgBC,UAAU,CAAC,MAAM;AAE7BP,MAAAA,YAAY,CAACM,KAAb,GAAqB,EAArB;AACAP,MAAAA,SAAS,CAACO,KAAV,GAAkB,KAAlB;AACAL,MAAAA,cAAc,CAACK,KAAf,GAAuB,EAAvB;AAEH,KANyB,EAMvB,IANuB,CAA1B;AAOH,GAZD;;AAcAV,EAAAA,WAAW,CAAC,MAAM;AACdY,IAAAA,YAAY,CAACN,OAAO,CAACI,KAAT,CAAZ;AACH,GAFU,CAAX;AAKA,SAAO;AACHP,IAAAA,SADG;AAEHC,IAAAA,YAFG;AAGHC,IAAAA,cAHG;AAIHE,IAAAA;AAJG,GAAP;AAOH,CAhCM","sourcesContent":["import {\r\n    onUnmounted,\r\n    ref,\r\n} from 'vue'\r\n\r\nexport const useToast = () => {\r\n    const showToast = ref(false);\r\n    const toastMessage = ref('');\r\n    const toastAlertType = ref('');\r\n\r\n    const timeout = ref(null);\r\n    const triggerToast = (message, type = 'success') => {\r\n        showToast.value = true;\r\n        toastAlertType.value = type;\r\n        toastMessage.value = message;\r\n\r\n        timeout.value = setTimeout(() => {\r\n\r\n            toastMessage.value = '';\r\n            showToast.value = false;\r\n            toastAlertType.value = '';\r\n\r\n        }, 3000)\r\n    };\r\n\r\n    onUnmounted(() => {\r\n        clearTimeout(timeout.value)\r\n    })\r\n\r\n\r\n    return {\r\n        showToast,\r\n        toastMessage,\r\n        toastAlertType,\r\n        triggerToast,\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}