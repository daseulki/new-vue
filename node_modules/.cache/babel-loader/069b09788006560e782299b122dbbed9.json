{"ast":null,"code":"import { ref, computed } from '@vue/reactivity';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport Toast from '@/components/Toast.vue';\nexport default {\n  components: {\n    Toast\n  },\n\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const todo = ref(null);\n    const originalTodo = ref(null);\n    const loading = ref(true);\n    const todoId = route.params.id;\n\n    const getTodo = async () => {\n      const res = await axios.get('http://localhost:3000/todos/' + todoId);\n      todo.value = { ...res.data\n      };\n      originalTodo.value = { ...res.data\n      };\n      loading.value = false;\n    };\n\n    const todoUpdated = computed(() => {\n      return !_.isEqual(todo.value, originalTodo.value);\n    });\n\n    const toggleTodoStatus = () => {\n      todo.completed = !todo.completed;\n    };\n\n    const goTodoListPage = () => {\n      router.push({\n        name: 'Todos'\n      });\n    };\n\n    getTodo();\n\n    const onSave = async () => {\n      const res = await axios.put(`http://localhost:3000/todos/${todoId}`, {\n        subject: todo.value.subject,\n        completed: todo.value.completed\n      });\n      originalTodo.value = { ...res.data\n      };\n    };\n\n    return {\n      todo,\n      loading,\n      toggleTodoStatus,\n      goTodoListPage,\n      onSave,\n      todoUpdated\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA6CA,SAASA,GAAT,EAAcC,QAAd,QAA8B,iBAA9B;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,eAAe;AACXC,YAAU,EAAE;AACRD;AADQ,GADD;;AAIXE,OAAK,GAAE;AACH,UAAMC,KAAI,GAAIP,QAAQ,EAAtB;AACA,UAAMQ,MAAK,GAAIP,SAAS,EAAxB;AACA,UAAMQ,IAAG,GAAIX,GAAG,CAAC,IAAD,CAAhB;AACA,UAAMY,YAAW,GAAIZ,GAAG,CAAC,IAAD,CAAxB;AACA,UAAMa,OAAM,GAAIb,GAAG,CAAC,IAAD,CAAnB;AACA,UAAMc,MAAK,GAAIL,KAAK,CAACM,MAAN,CAAaC,EAA5B;;AAIA,UAAMC,OAAM,GAAI,YAAW;AACvB,YAAMC,GAAE,GAAI,MAAMd,KAAK,CAACe,GAAN,CAAU,iCAAiCL,MAA3C,CAAlB;AAEAH,UAAI,CAACS,KAAL,GAAa,EAAC,GAAGF,GAAG,CAACG;AAAR,OAAb;AACAT,kBAAY,CAACQ,KAAb,GAAqB,EAAC,GAAGF,GAAG,CAACG;AAAR,OAArB;AAEAR,aAAO,CAACO,KAAR,GAAgB,KAAhB;AAEJ,KARA;;AASA,UAAME,WAAU,GAAIrB,QAAQ,CAAC,MAAM;AAC/B,aAAO,CAACI,CAAC,CAACkB,OAAF,CAAUZ,IAAI,CAACS,KAAf,EAAsBR,YAAY,CAACQ,KAAnC,CAAR;AACH,KAF2B,CAA5B;;AAIA,UAAMI,gBAAe,GAAI,MAAM;AAC3Bb,UAAI,CAACc,SAAL,GAAiB,CAACd,IAAI,CAACc,SAAvB;AACJ,KAFA;;AAGA,UAAMC,cAAa,GAAI,MAAM;AACzBhB,YAAM,CAACiB,IAAP,CAAY;AACRC,YAAI,EAAC;AADG,OAAZ;AAGJ,KAJA;;AAMAX,WAAO;;AAEP,UAAMY,MAAK,GAAI,YAAU;AACrB,YAAMX,GAAE,GAAI,MAAMd,KAAK,CAAC0B,GAAN,CAAW,+BAA8BhB,MAAO,EAAhD,EAAkD;AAChEiB,eAAM,EAAIpB,IAAI,CAACS,KAAL,CAAWW,OAD2C;AAEhEN,iBAAQ,EAAId,IAAI,CAACS,KAAL,CAAWK;AAFyC,OAAlD,CAAlB;AAIAb,kBAAY,CAACQ,KAAb,GAAqB,EAAC,GAAGF,GAAG,CAACG;AAAR,OAArB;AACJ,KANA;;AAQA,WAAO;AACHV,UADG;AAEHE,aAFG;AAGHW,sBAHG;AAIHE,oBAJG;AAKHG,YALG;AAMHP;AANG,KAAP;AAQJ;;AAtDW,CAAf","names":["ref","computed","useRoute","useRouter","axios","_","Toast","components","setup","route","router","todo","originalTodo","loading","todoId","params","id","getTodo","res","get","value","data","todoUpdated","isEqual","toggleTodoStatus","completed","goTodoListPage","push","name","onSave","put","subject"],"sourceRoot":"","sources":["E:\\vue\\vue_todo\\src\\pages\\todos\\_id.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Todo Page</h1>\r\n        <div v-if=\"loading\">\r\n            Loading...\r\n        </div>\r\n        <form v-else\r\n        @submit.prevent=\"onSave\">\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">\r\n                     <div class=\"form-group\">\r\n                        <label for=\"\">Subject</label>\r\n                        <input v-model=\"todo.subject\" type=\"text\" class=\"form-control\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                     <div class=\"form-group\">\r\n                        <label for=\"\">Status</label>\r\n                            <div>\r\n                                <button class=\"btn \"\r\n                                :class= \"todo.completed ? 'btn-success' : 'btn-danger'\"\r\n                                @click.self.prevent=\"toggleTodoStatus\"> \r\n                                {{ todo.completed ? 'Completed' : 'Incomplete'}}\r\n                                \r\n                                </button>\r\n                           \r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled = \"todoUpdated\">\r\n                저장</button>\r\n            <button type=\"submit\" class=\"btn btn-outline-dark ms-2\"\r\n            @click=\"goTodoListPage\">\r\n                취소</button>\r\n        </form>\r\n        <Toast \r\n            v-if=\"showToast\"\r\n            :message=\"toastMessage\"\r\n            :type=\"toastAlertType\"\r\n        />\r\n    </div>\r\n</template>\r\n<script>\r\nimport { ref, computed } from '@vue/reactivity';\r\nimport {useRoute,useRouter} from 'vue-router'\r\nimport axios from 'axios'\r\nimport _ from 'lodash'\r\nimport Toast from '@/components/Toast.vue';\r\n\r\nexport default {\r\n    components: {\r\n        Toast,\r\n    },\r\n    setup(){\r\n        const route = useRoute();\r\n        const router = useRouter();\r\n        const todo = ref(null);\r\n        const originalTodo = ref(null);\r\n        const loading = ref(true);\r\n        const todoId = route.params.id;\r\n        \r\n\r\n\r\n        const getTodo = async() => {\r\n            const res = await axios.get('http://localhost:3000/todos/' + todoId)\r\n        \r\n            todo.value = {...res.data}; \r\n            originalTodo.value = {...res.data};\r\n\r\n            loading.value = false;\r\n\r\n        }\r\n        const todoUpdated = computed(() => {\r\n            return !_.isEqual(todo.value, originalTodo.value)\r\n        })\r\n\r\n        const toggleTodoStatus = () => {\r\n            todo.completed = !todo.completed\r\n        }\r\n        const goTodoListPage = () => {\r\n            router.push({\r\n                name:'Todos'\r\n            })\r\n        }\r\n\r\n        getTodo();\r\n\r\n        const onSave = async() =>{\r\n            const res = await axios.put(`http://localhost:3000/todos/${todoId}`,{\r\n                subject : todo.value.subject,\r\n                completed : todo.value.completed\r\n            })\r\n            originalTodo.value = {...res.data}\r\n        }\r\n        \r\n        return {\r\n            todo,\r\n            loading,\r\n            toggleTodoStatus,\r\n            goTodoListPage,\r\n            onSave,\r\n            todoUpdated\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}