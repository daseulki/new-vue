{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card-body p-2 d-flex align-items-center\"\n};\nconst _hoisted_2 = {\n  class: \"form-check flex-grow-1\"\n};\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"value\", \"onChange\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.todos, (todo, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: todo.id,\n      class: \"card mt-2\"\n    }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      class: \"form-check-input\",\n      \"onUpdate:modelValue\": $event => todo.completed = $event,\n      value: todo.completed,\n      onChange: $event => $setup.toggleTodo(index)\n    }, null, 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_3), [[_vModelCheckbox, todo.completed]]), _createElementVNode(\"label\", {\n      for: \"\",\n      class: _normalizeClass([{\n        todo: todo.completed\n      }, \"form-check-label\"])\n    }, _toDisplayString(todo.subject), 3\n    /* TEXT, CLASS */\n    )]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: $event => $setup.deleteTodo(index)\n    }, \"Delete\", 8\n    /* PROPS */\n    , _hoisted_4)])])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;AAIiBA,OAAK,EAAC;;;AACFA,OAAK,EAAC;;;;;uBAJvBC,oBAoBM,KApBN,EAoBM,IApBN,EAoBM,oBAnBFA,oBAkBMC,SAlBN,EAkBM,IAlBN,EAkBMC,YAlBuBC,YAkBvB,EAlB4B,CAArBC,IAAqB,EAAfC,KAAe,KAAV;yBAAxBL,oBAkBM,KAlBN,EAkBM;AAlB+BM,SAAG,EAAEF,IAAI,CAACG,EAkBzC;AAlB6CR,WAAK,EAAC;AAkBnD,KAlBN,GAEIS,oBAcM,KAdN,cAcM,CAbFA,oBAQM,KARN,cAQM,iBAPFA,oBAI4B,OAJ5B,EAI4B;AAJrBC,UAAI,EAAC,UAIgB;AAH5BV,WAAK,EAAC,kBAGsB;uCAFnBK,IAAI,CAACM,YAASC,MAEK;AAD3BC,WAAK,EAAER,IAAI,CAACM,SACe;AAA3BG,cAAM,YAAEC,kBAAWT,KAAX;AAAmB,KAJ5B;;AAAA,sCAESD,IAAI,CAACM,YAKZ,EAFFF,oBACmF,OADnF,EACmF;AAD5EO,SAAG,EAAC,EACwE;AAAlFhB,WAAK;AAAAK,cAASA,IAAI,CAACM;AAAd,SAAgC,kBAAhC;AAA6E,KADnF,mBAC4DN,IAAI,CAACY,QADjE,EACwE;AAAA;AADxE,KAEE,CARN,CAaE,EAJFR,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFA,oBAC0C,QAD1C,EAC0C;AADlCT,WAAK,EAAC,uBAC4B;AAAzCkB,aAAK,YAAEH,kBAAWT,KAAX;AAAkC,KAD1C,EAC2B,QAD3B,EACiC;AAAA;AADjC,MACiCa,UADjC,CAEE,CAHN,CAIE,CAdN,EAFJ;GAkBM,CAlBN;;AAAA,GAmBE,EApBN","names":["class","_createElementBlock","_Fragment","_renderList","$props","todo","index","key","id","_createElementVNode","type","completed","$event","value","onChange","$setup","for","subject","onClick","_hoisted_4"],"sourceRoot":"","sources":["E:\\vue\\vue_todo\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div v-for=\"(todo, index) in todos\" :key=\"todo.id\" class=\"card mt-2\">\r\n\r\n            <div class=\"card-body p-2 d-flex align-items-center\">\r\n                <div class=\"form-check flex-grow-1\">\r\n                    <input type=\"checkbox\" \r\n                    class=\"form-check-input\" \r\n                    v-model=\"todo.completed\"\r\n                    :value=\"todo.completed\"\r\n                    @change=\"toggleTodo(index)\">\r\n                    <label for=\"\" \r\n                    :class=\"{todo: todo.completed}\" class=\"form-check-label\">{{ todo.subject }}</label>\r\n                </div>\r\n                <div>\r\n                    <button class=\"btn btn-danger btn-sm\"\r\n                    @click=\"deleteTodo(index)\">Delete</button>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        todos: {\r\n            type: Array,\r\n            required: true\r\n        }\r\n    },\r\n     emits:['toggle-todo'],\r\n    setup(props, {emit}) {\r\n        const toggleTodo = (index) => {\r\n            emit('toggle-todo', index)\r\n        }\r\n        const deleteTodo = (index) => {\r\n            emit('delete-todo', index)\r\n        }\r\n\r\n        return {\r\n            toggleTodo,\r\n            deleteTodo\r\n        }\r\n    },\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}