{"ast":null,"code":"import { ref, computed, watch } from 'vue';\nimport TodoSimpleForm from '@/components/TodoSimpleForm.vue';\nimport TodoList from '@/components/TodoList.vue';\nimport axios from 'axios';\nimport Toast from '@/components/Toast.vue';\nimport { useToast } from '@/composables/toast';\nexport default {\n  name: 'App',\n  components: {\n    TodoSimpleForm,\n    TodoList,\n    Toast\n  },\n\n  setup() {\n    const toggle = ref(false);\n    const todos = ref([]);\n    const numOfTodos = ref(0);\n    const limit = 5;\n    const curPage = ref(1);\n    const searchText = ref('');\n    const numOfPages = computed(() => {\n      return Math.ceil(numOfTodos.value / limit);\n    });\n    const {\n      showToast,\n      toastMessage,\n      toastAlertType,\n      triggerToast\n    } = useToast();\n\n    const getTodo = async (page = curPage.value) => {\n      //curPage.value = page;\n      try {\n        console.log(page);\n        const res = await axios.get(`http://localhost:3000/todos?_sort=id&_order=desc&subject_like=${searchText.value}&_page=${page}&_limit=${limit}`);\n        todos.value = res.data;\n        numOfTodos.value = res.headers['x-total-count'];\n      } catch (err) {\n        console.error(err);\n        triggerToast(err, 'danger');\n      }\n    };\n\n    getTodo();\n\n    const addTodo = async todo => {\n      try {\n        const res = await axios.post('http://localhost:3000/todos', {\n          subject: todo.subject,\n          completed: todo.completed\n        });\n        todos.value.push(res.data);\n        getTodo();\n      } catch (err) {\n        console.error(err);\n        triggerToast(err, 'danger');\n      }\n    };\n\n    const deleteTodo = async index => {\n      const id = todos.value[index].id;\n\n      try {\n        await axios.delete('http://localhost:3000/todos/' + id);\n        getTodo(1);\n      } catch (err) {\n        console.error(err);\n        triggerToast(err, 'danger');\n      }\n    };\n\n    const onToggle = () => {\n      toggle.value = !toggle.value;\n    };\n\n    const toggleTodo = async (index, checked) => {\n      const id = todos.value[index].id;\n\n      try {\n        await axios.patch('http://localhost:3000/todos/' + id, {\n          //completed: !todos.value[index].completed\n          completed: checked\n        }); //todos.value[index].completed = !todos.value[index].completed\n\n        todos.value[index].completed = checked;\n      } catch (err) {\n        console.error(err);\n        triggerToast(err, 'danger');\n      }\n    };\n\n    let timeout = null;\n\n    const searchTodo = () => {\n      getTodo(1);\n    };\n\n    watch(searchText, () => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        getTodo(1);\n      }, 1000);\n    });\n    const filteredTodos = computed(() => {\n      if (searchText.value) {\n        return todos.value.filter(todo => {\n          return todo.subject.includes(searchText.value);\n        });\n      }\n\n      return todos.value;\n    }); // const showToast = ref(false);\n    // const toastMessage = ref('');\n    // const toastAlertType = ref('');\n    // const toastTimeout = ref(null);\n    // const triggerToast = (message, type = 'success') => {\n    //     showToast.value = true;\n    //     toastAlertType.value=type;\n    //     toastMessage.value=message;\n    //     toastTimeout.value = setTimeout(() => {\n    //       toastMessage.value='';\n    //       showToast.value= false;\n    //       toastAlertType.value='';\n    //     }, 3000)\n    //   };\n\n    return {\n      searchTodo,\n      todos,\n      getTodo,\n      addTodo,\n      deleteTodo,\n      toggleTodo,\n      onToggle,\n      toggle,\n      searchText,\n      filteredTodos,\n      numOfPages,\n      curPage,\n      Toast,\n      showToast,\n      toastMessage,\n      toastAlertType\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAiDE,SACEA,GADF,EAEEC,QAFF,EAGEC,KAHF,QAIO,KAJP;AAKA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAGA,eAAe;AACbC,MAAI,EAAE,KADO;AAEbC,YAAU,EAAE;AACVN,kBADU;AAEVC,YAFU;AAGVE;AAHU,GAFC;;AAQbI,OAAK,GAAG;AACN,UAAMC,MAAK,GAAIX,GAAG,CAAC,KAAD,CAAlB;AAEA,UAAMY,KAAI,GAAIZ,GAAG,CAAC,EAAD,CAAjB;AACA,UAAMa,UAAS,GAAIb,GAAG,CAAC,CAAD,CAAtB;AACA,UAAMc,KAAI,GAAI,CAAd;AACA,UAAMC,OAAM,GAAIf,GAAG,CAAC,CAAD,CAAnB;AACA,UAAMgB,UAAS,GAAIhB,GAAG,CAAC,EAAD,CAAtB;AAGA,UAAMiB,UAAS,GAAIhB,QAAQ,CAAC,MAAI;AAC9B,aAAOiB,IAAI,CAACC,IAAL,CAAUN,UAAU,CAACO,KAAX,GAAiBN,KAA3B,CAAP;AACD,KAF0B,CAA3B;AAIA,UAAM;AACJO,eADI;AAEJC,kBAFI;AAGJC,oBAHI;AAIJC;AAJI,QAMFjB,QAAQ,EANZ;;AAQA,UAAMkB,OAAM,GAAI,OAAOC,IAAG,GAAIX,OAAO,CAACK,KAAtB,KAAgC;AAC9C;AACA,UAAI;AACFO,eAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,cAAMG,GAAE,GAAI,MAAMxB,KAAK,CAACyB,GAAN,CACf,iEAAgEd,UAAU,CAACI,KAAM,UAASM,IAAK,WAAUZ,KAAM,EADhG,CAAlB;AAGAF,aAAK,CAACQ,KAAN,GAAcS,GAAG,CAACE,IAAlB;AACAlB,kBAAU,CAACO,KAAX,GAAmBS,GAAG,CAACG,OAAJ,CAAY,eAAZ,CAAnB;AACF,OAPA,CAOE,OAAOC,GAAP,EAAY;AACZN,eAAO,CAACO,KAAR,CAAcD,GAAd;AACAT,oBAAY,CAACS,GAAD,EAAM,QAAN,CAAZ;AACF;AACF,KAbA;;AAcAR,WAAO;;AAEP,UAAMU,OAAM,GAAI,MAAOC,IAAP,IAAgB;AAC9B,UAAI;AACF,cAAMP,GAAE,GAAI,MAAMxB,KAAK,CAACgC,IAAN,CAAW,6BAAX,EAA0C;AAC1DC,iBAAO,EAAEF,IAAI,CAACE,OAD4C;AAE1DC,mBAAS,EAAEH,IAAI,CAACG;AAF0C,SAA1C,CAAlB;AAIA3B,aAAK,CAACQ,KAAN,CAAYoB,IAAZ,CAAiBX,GAAG,CAACE,IAArB;AACAN,eAAO;AACT,OAPA,CAOE,OAAOQ,GAAP,EAAY;AACZN,eAAO,CAACO,KAAR,CAAcD,GAAd;AACAT,oBAAY,CAACS,GAAD,EAAM,QAAN,CAAZ;AACF;AAEF,KAbA;;AAcA,UAAMQ,UAAS,GAAI,MAAOC,KAAP,IAAiB;AAClC,YAAMC,EAAC,GAAI/B,KAAK,CAACQ,KAAN,CAAYsB,KAAZ,EAAmBC,EAA9B;;AACA,UAAI;AACF,cAAMtC,KAAK,CAACuC,MAAN,CAAa,iCAAiCD,EAA9C,CAAN;AAEAlB,eAAO,CAAC,CAAD,CAAP;AAEF,OALA,CAKE,OAAOQ,GAAP,EAAY;AACZN,eAAO,CAACO,KAAR,CAAcD,GAAd;AACAT,oBAAY,CAACS,GAAD,EAAM,QAAN,CAAZ;AACF;AAEF,KAZA;;AAaA,UAAMY,QAAO,GAAI,MAAM;AACrBlC,YAAM,CAACS,KAAP,GAAe,CAACT,MAAM,CAACS,KAAvB;AACD,KAFD;;AAIA,UAAM0B,UAAS,GAAI,OAAOJ,KAAP,EAAcK,OAAd,KAA0B;AAC3C,YAAMJ,EAAC,GAAI/B,KAAK,CAACQ,KAAN,CAAYsB,KAAZ,EAAmBC,EAA9B;;AACA,UAAI;AACF,cAAMtC,KAAK,CAAC2C,KAAN,CAAY,iCAAiCL,EAA7C,EAAiD;AACrD;AACAJ,mBAAS,EAAEQ;AAF0C,SAAjD,CAAN,CADE,CAKF;;AACAnC,aAAK,CAACQ,KAAN,CAAYsB,KAAZ,EAAmBH,SAAnB,GAA+BQ,OAA/B;AAEF,OARA,CAQE,OAAOd,GAAP,EAAY;AACZN,eAAO,CAACO,KAAR,CAAcD,GAAd;AACAT,oBAAY,CAACS,GAAD,EAAM,QAAN,CAAZ;AACF;AACF,KAdA;;AAgBA,QAAIgB,OAAO,GAAE,IAAb;;AACA,UAAMC,UAAS,GAAI,MAAM;AACtBzB,aAAO,CAAC,CAAD,CAAP;AACH,KAFA;;AAKAvB,SAAK,CAACc,UAAD,EAAa,MAAM;AACtBmC,kBAAY,CAACF,OAAD,CAAZ;AACAA,aAAM,GAAIG,UAAU,CAAC,MAAI;AACvB3B,eAAO,CAAC,CAAD,CAAP;AACD,OAFmB,EAEjB,IAFiB,CAApB;AAGD,KALI,CAAL;AAQA,UAAM4B,aAAY,GAAIpD,QAAQ,CAAC,MAAM;AACnC,UAAIe,UAAU,CAACI,KAAf,EAAsB;AACpB,eAAOR,KAAK,CAACQ,KAAN,CAAYkC,MAAZ,CAAmBlB,IAAG,IAAK;AAChC,iBAAOA,IAAI,CAACE,OAAL,CAAaiB,QAAb,CAAsBvC,UAAU,CAACI,KAAjC,CAAP;AACD,SAFM,CAAP;AAGF;;AACA,aAAOR,KAAK,CAACQ,KAAb;AACD,KAP6B,CAA9B,CAnGM,CA6GN;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;;AAGA,WAAO;AACL8B,gBADK;AAELtC,WAFK;AAGLa,aAHK;AAILU,aAJK;AAKLM,gBALK;AAMLK,gBANK;AAOLD,cAPK;AAQLlC,YARK;AASLK,gBATK;AAULqC,mBAVK;AAWLpC,gBAXK;AAYLF,aAZK;AAaLT,WAbK;AAcLe,eAdK;AAeLC,kBAfK;AAgBLC;AAhBK,KAAP;AAmBD;;AA7JY,CAAf","names":["ref","computed","watch","TodoSimpleForm","TodoList","axios","Toast","useToast","name","components","setup","toggle","todos","numOfTodos","limit","curPage","searchText","numOfPages","Math","ceil","value","showToast","toastMessage","toastAlertType","triggerToast","getTodo","page","console","log","res","get","data","headers","err","error","addTodo","todo","post","subject","completed","push","deleteTodo","index","id","delete","onToggle","toggleTodo","checked","patch","timeout","searchTodo","clearTimeout","setTimeout","filteredTodos","filter","includes"],"sourceRoot":"","sources":["E:\\vue\\vue_todo\\src\\pages\\todos\\index.vue"],"sourcesContent":["<template>\r\n\r\n<div>\r\n <div class=\"container\">\r\n    <div class=\"d-flex justify-content-between mb-3\">\r\n      <h2 class=\"strong\">To-Do List</h2>\r\n\r\n\r\n      <button class=\"btn btn-primary\">Create</button>\r\n    </div>\r\n    <input type=\"text\" class=\"form-control\" \r\n    v-model=\"searchText\" placeholder=\"Search\"\r\n    @keyup.enter=\"searchTodo\">\r\n    <hr>\r\n    <TodoSimpleForm @add-todo=\"addTodo\"></TodoSimpleForm>\r\n    <div v-if=\"!filteredTodos.length\"> Nothing </div>\r\n    <TodoList :todos=\"filteredTodos\" \r\n      @toggle-todo=\"toggleTodo\" \r\n      @delete-todo=\"deleteTodo\">\r\n    </TodoList>\r\n\r\n    <hr>\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul class=\"pagination\">\r\n        <li class=\"page-item\" @click='getTodo(curPage-1);curPage = curPage-1'>\r\n          <a class=\"page-link\" >Previous</a></li>\r\n       \r\n        <li v-for=\"page in numOfPages\" \r\n        :key=\"page\" :class=\"curPage === page? 'active':''\"\r\n        @click='getTodo(page); curPage = page'\r\n        class=\"page-item\"><a class=\"page-link\" href=\"#\">{{ page }}</a></li>\r\n\r\n        <li class=\"page-item\" @click='getTodo(curPage+1); curPage = curPage+1'>\r\n          <a class=\"page-link\" >Next</a></li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n        <Toast style=\"z-index: 1050;\"\r\n            v-if=\"showToast\"\r\n            :message=\"toastMessage\"\r\n            :type=\"toastAlertType\"\r\n        />\r\n\r\n</div>\r\n\r\n \r\n</template>\r\n\r\n<script>\r\n  import {\r\n    ref,\r\n    computed,\r\n    watch\r\n  } from 'vue'\r\n  import TodoSimpleForm from '@/components/TodoSimpleForm.vue'\r\n  import TodoList from '@/components/TodoList.vue'\r\n  import axios from 'axios'\r\n  import Toast from '@/components/Toast.vue';\r\n  import { useToast } from '@/composables/toast'\r\n\r\n\r\n  export default {\r\n    name: 'App',\r\n    components: {\r\n      TodoSimpleForm,\r\n      TodoList,\r\n      Toast\r\n\r\n    },\r\n    setup() {\r\n      const toggle = ref(false);\r\n\r\n      const todos = ref([]);\r\n      const numOfTodos = ref(0);\r\n      const limit = 5;\r\n      const curPage = ref(1);\r\n      const searchText = ref('');\r\n\r\n\r\n      const numOfPages = computed(()=>{\r\n        return Math.ceil(numOfTodos.value/limit)\r\n      })\r\n\r\n      const {\r\n        showToast,\r\n        toastMessage,\r\n        toastAlertType,\r\n        triggerToast,\r\n\r\n      } = useToast() \r\n\r\n      const getTodo = async (page = curPage.value) => {\r\n        //curPage.value = page;\r\n        try {\r\n          console.log(page)\r\n          const res = await axios.get(\r\n            `http://localhost:3000/todos?_sort=id&_order=desc&subject_like=${searchText.value}&_page=${page}&_limit=${limit}`\r\n            )\r\n          todos.value = res.data;\r\n          numOfTodos.value = res.headers['x-total-count'];\r\n        } catch (err) {\r\n          console.error(err)\r\n          triggerToast(err, 'danger');\r\n        }\r\n      }\r\n      getTodo();\r\n\r\n      const addTodo = async (todo) => {\r\n        try {\r\n          const res = await axios.post('http://localhost:3000/todos', {\r\n            subject: todo.subject,\r\n            completed: todo.completed,\r\n          })\r\n          todos.value.push(res.data);\r\n          getTodo();\r\n        } catch (err) {\r\n          console.error(err)\r\n          triggerToast(err, 'danger');\r\n        }\r\n\r\n      }\r\n      const deleteTodo = async (index) => {\r\n        const id = todos.value[index].id;\r\n        try {\r\n          await axios.delete('http://localhost:3000/todos/' + id)\r\n\r\n          getTodo(1);\r\n\r\n        } catch (err) {\r\n          console.error(err)\r\n          triggerToast(err, 'danger');\r\n        }\r\n\r\n      }\r\n      const onToggle = () => {\r\n        toggle.value = !toggle.value;\r\n      };\r\n\r\n      const toggleTodo = async (index, checked) => {\r\n        const id = todos.value[index].id;\r\n        try {\r\n          await axios.patch('http://localhost:3000/todos/' + id, {\r\n            //completed: !todos.value[index].completed\r\n            completed: checked\r\n          })\r\n          //todos.value[index].completed = !todos.value[index].completed\r\n          todos.value[index].completed = checked\r\n\r\n        } catch (err) {\r\n          console.error(err)\r\n          triggerToast(err, 'danger');\r\n        }\r\n      }\r\n\r\n      let timeout= null;\r\n      const searchTodo = () => {\r\n         getTodo(1);\r\n      }\r\n\r\n\r\n      watch(searchText, () => {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(()=>{\r\n          getTodo(1);\r\n        }, 1000)\r\n      })\r\n\r\n  \r\n      const filteredTodos = computed(() => {\r\n        if (searchText.value) {\r\n          return todos.value.filter(todo => {\r\n            return todo.subject.includes(searchText.value)\r\n          });\r\n        }\r\n        return todos.value;\r\n      })\r\n\r\n      \r\n      // const showToast = ref(false);\r\n      // const toastMessage = ref('');\r\n      // const toastAlertType = ref('');\r\n\r\n\r\n      // const toastTimeout = ref(null);\r\n      // const triggerToast = (message, type = 'success') => {\r\n      //     showToast.value = true;\r\n      //     toastAlertType.value=type;\r\n      //     toastMessage.value=message;\r\n\r\n      //     toastTimeout.value = setTimeout(() => {\r\n\r\n      //       toastMessage.value='';\r\n      //       showToast.value= false;\r\n      //       toastAlertType.value='';\r\n            \r\n      //     }, 3000)\r\n      //   };\r\n\r\n\r\n      return {\r\n        searchTodo,\r\n        todos,\r\n        getTodo,\r\n        addTodo,\r\n        deleteTodo,\r\n        toggleTodo,\r\n        onToggle,\r\n        toggle,\r\n        searchText,\r\n        filteredTodos,\r\n        numOfPages,\r\n        curPage,\r\n        Toast,\r\n        showToast,\r\n        toastMessage,\r\n        toastAlertType,\r\n\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\nnav a{\r\n  cursor:pointer;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}