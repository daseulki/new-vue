{"ast":null,"code":"import { useRouter } from 'vue-router';\nimport { ref } from '@vue/reactivity';\nimport Modal from \"@/components/Modal.vue\";\nexport default {\n  props: {\n    todos: {\n      type: Array,\n      required: true,\n      completed: false\n    }\n  },\n  components: {\n    Modal\n  },\n  emits: ['toggle-todo', 'delete-todo'],\n\n  setup(props, {\n    emit\n  }) {\n    const router = useRouter();\n    const isDelete = ref(false);\n    const wantDelete = ref();\n\n    const toggleTodo = (index, e) => {\n      emit('toggle-todo', index, e.target.checked);\n    };\n\n    const deleteTodo = index => {\n      emit('delete-todo', index);\n    };\n\n    const showDelete = index => {\n      isDelete.value = true;\n      wantDelete.value = index;\n    };\n\n    const moveToPage = todoId => {\n      router.push({\n        name: 'Todo',\n        params: {\n          id: todoId\n        }\n      });\n    };\n\n    const todoStyle = {\n      //:style\n      textDecoration: 'line-through',\n      color: 'gray'\n    };\n\n    const closeModal = () => {\n      isDelete.value = true;\n      console.log('모달 눌렷음요..');\n    };\n\n    return {\n      toggleTodo,\n      moveToPage,\n      todoStyle,\n      closeModal,\n      showDelete,\n      isDelete,\n      deleteTodo\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAgCA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,eAAe;AACXC,OAAK,EAAE;AACHC,SAAK,EAAE;AACHC,UAAI,EAAEC,KADH;AAEHC,cAAQ,EAAE,IAFP;AAGHC,eAAS,EAAE;AAHR;AADJ,GADI;AAQXC,YAAU,EAAE;AACRP;AADQ,GARD;AAWXQ,OAAK,EAAC,CAAC,aAAD,EAAgB,aAAhB,CAXK;;AAYXC,OAAK,CAACR,KAAD,EAAQ;AAACS;AAAD,GAAR,EAAgB;AACjB,UAAMC,MAAK,GAAIb,SAAS,EAAxB;AACA,UAAMc,QAAO,GAAIb,GAAG,CAAC,KAAD,CAApB;AACA,UAAMc,UAAS,GAAId,GAAG,EAAtB;;AAEA,UAAMe,UAAS,GAAI,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC7BN,UAAI,CAAC,aAAD,EAAgBK,KAAhB,EAAuBC,CAAC,CAACC,MAAF,CAASC,OAAhC,CAAJ;AACJ,KAFA;;AAGA,UAAMC,UAAS,GAAKJ,KAAD,IAAW;AAC1BL,UAAI,CAAC,aAAD,EAAgBK,KAAhB,CAAJ;AACJ,KAFA;;AAGA,UAAMK,UAAS,GAAKL,KAAD,IAAW;AAC1BH,cAAQ,CAACS,KAAT,GAAiB,IAAjB;AACAR,gBAAU,CAACQ,KAAX,GAAmBN,KAAnB;AACJ,KAHA;;AAKA,UAAMO,UAAS,GAAKC,MAAD,IAAY;AAC3BZ,YAAM,CAACa,IAAP,CAAY;AACRC,YAAI,EAAE,MADE;AAERC,cAAK,EAAI;AACLC,YAAE,EAAEJ;AADC;AAFD,OAAZ;AAMJ,KAPA;;AAQA,UAAMK,SAAQ,GAAI;AAAE;AAChBC,oBAAc,EAAE,cADF;AAEdC,WAAK,EAAE;AAFO,KAAlB;;AAKA,UAAMC,UAAS,GAAI,MAAM;AACrBnB,cAAQ,CAACS,KAAT,GAAiB,IAAjB;AACAW,aAAO,CAACC,GAAR,CAAY,WAAZ;AACH,KAHD;;AAKA,WAAO;AACHnB,gBADG;AAGHQ,gBAHG;AAIHM,eAJG;AAKHG,gBALG;AAMHX,gBANG;AAOHR,cAPG;AAQHO;AARG,KAAP;AAWH;;AAzDU,CAAf","names":["useRouter","ref","Modal","props","todos","type","Array","required","completed","components","emits","setup","emit","router","isDelete","wantDelete","toggleTodo","index","e","target","checked","deleteTodo","showDelete","value","moveToPage","todoId","push","name","params","id","todoStyle","textDecoration","color","closeModal","console","log"],"sourceRoot":"","sources":["C:\\Users\\sisia\\Desktop\\new_vue\\new vue\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div v-for=\"(todo, index) in todos\" :key=\"todo.id\" class=\"card mt-2\">\r\n\r\n            <div class=\"card-body p-2 d-flex align-items-center\"\r\n            style=\"cursor: pointer\"\r\n            @click=\"moveToPage(todo.id)\">\r\n                <div class=\"form-check flex-grow-1\">\r\n                    <input type=\"checkbox\" \r\n                    class=\"form-check-input\" \r\n                    :checked=\"todo.completed\"\r\n                    @click.stop=\"toggleTodo(index, $event)\">\r\n                    <span \r\n                    :class=\"{todo: todo.completed}\" \r\n                     class=\"form-check-label\"> \r\n                    {{ todo.subject }}</span>\r\n                     <!-- :class=\"{todo: todo.completed}\" \r\n                    :style=\"todo.completed?todoStyle:{}\" -->\r\n                </div>\r\n                <div>\r\n                    <button class=\"btn btn-danger btn-sm\"\r\n                    @click.stop=\"showDelete(index)\">삭제</button>\r\n                </div>\r\n            </div>\r\n          \r\n        </div>\r\n          <Modal v-if=\"isDelete\" @close-modal = 'closeModal' \r\n          @delete-todo = 'deleteTodo'/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRouter } from 'vue-router'\r\nimport { ref } from '@vue/reactivity';\r\nimport Modal from \"@/components/Modal.vue\"\r\n\r\nexport default {\r\n    props: {\r\n        todos: {\r\n            type: Array,\r\n            required: true,\r\n            completed: false,\r\n        }\r\n    },\r\n    components: {\r\n        Modal\r\n    },\r\n    emits:['toggle-todo', 'delete-todo'],\r\n    setup(props, {emit}) {\r\n        const router = useRouter();\r\n        const isDelete = ref(false);\r\n        const wantDelete = ref();\r\n\r\n        const toggleTodo = (index, e) => {\r\n            emit('toggle-todo', index, e.target.checked)\r\n        }\r\n        const deleteTodo = (index) => {\r\n            emit('delete-todo', index)\r\n        }\r\n        const showDelete = (index) => {\r\n            isDelete.value = true; \r\n            wantDelete.value = index \r\n        }\r\n\r\n        const moveToPage = (todoId) => {\r\n            router.push({\r\n                name: 'Todo',\r\n                params : {\r\n                    id: todoId\r\n                }\r\n            })\r\n        }\r\n        const todoStyle = { //:style\r\n            textDecoration: 'line-through',\r\n            color: 'gray',\r\n        };\r\n\r\n        const closeModal = () => {\r\n            isDelete.value = true;\r\n            console.log('모달 눌렷음요..')\r\n        };\r\n\r\n        return {\r\n            toggleTodo,\r\n\r\n            moveToPage,\r\n            todoStyle,\r\n            closeModal,\r\n            showDelete,\r\n            isDelete,\r\n            deleteTodo,\r\n\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .todo{ /* :class */\r\n        text-decoration: line-through;\r\n        color: gray;\r\n    }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}