{"ast":null,"code":"export default {\n  props: {\n    todos: {\n      type: Array,\n      required: true,\n      completed: false\n    }\n  },\n  emits: ['toggle-todo'],\n\n  setup(props, {\n    emit\n  }) {\n    const toggleTodo = index => {\n      emit('toggle-todo', index);\n    };\n\n    const deleteTodo = index => {\n      emit('delete-todo', index);\n    };\n\n    const todoStyle = {\n      //:style로 \n      textDecoration: 'line-through',\n      color: 'gray'\n    };\n    return {\n      toggleTodo,\n      deleteTodo,\n      todoStyle\n    };\n  }\n\n};","map":{"version":3,"mappings":"AA4BA,eAAe;AACXA,OAAK,EAAE;AACHC,SAAK,EAAE;AACHC,UAAI,EAAEC,KADH;AAEHC,cAAQ,EAAE,IAFP;AAGHC,eAAS,EAAE;AAHR;AADJ,GADI;AAQXC,OAAK,EAAC,CAAC,aAAD,CARK;;AASXC,OAAK,CAACP,KAAD,EAAQ;AAACQ;AAAD,GAAR,EAAgB;AACjB,UAAMC,UAAS,GAAKC,KAAD,IAAW;AAC1BF,UAAI,CAAC,aAAD,EAAgBE,KAAhB,CAAJ;AACJ,KAFA;;AAGA,UAAMC,UAAS,GAAKD,KAAD,IAAW;AAC1BF,UAAI,CAAC,aAAD,EAAgBE,KAAhB,CAAJ;AACJ,KAFA;;AAGA,UAAME,SAAQ,GAAI;AAAE;AAChBC,oBAAc,EAAE,cADF;AAEdC,WAAK,EAAE;AAFO,KAAlB;AAIA,WAAO;AACHL,gBADG;AAEHE,gBAFG;AAGHC;AAHG,KAAP;AAKH;;AAzBU,CAAf","names":["props","todos","type","Array","required","completed","emits","setup","emit","toggleTodo","index","deleteTodo","todoStyle","textDecoration","color"],"sourceRoot":"","sources":["E:\\vue\\vue_todo\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div v-for=\"(todo, index) in todos\" :key=\"todo.id\" class=\"card mt-2\">\r\n\r\n            <div class=\"card-body p-2 d-flex align-items-center\">\r\n                <div class=\"form-check flex-grow-1\">\r\n                    <input type=\"checkbox\" \r\n                    class=\"form-check-input\" \r\n                    :value=\"todo.completed\"\r\n                    @change=\"toggleTodo(index)\">\r\n                    <label for=\"\" \r\n                    :class=\"{todo: todo.completed}\" \r\n                     class=\"form-check-label\">\r\n                    {{ todo.subject }}</label>\r\n                     <!-- :class=\"{todo: todo.completed}\" \r\n                    :style=\"todo.completed?todoStyle:{}\" -->\r\n                </div>\r\n                <div>\r\n                    <button class=\"btn btn-danger btn-sm\"\r\n                    @click=\"deleteTodo(index)\">Delete</button>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        todos: {\r\n            type: Array,\r\n            required: true,\r\n            completed: false,\r\n        }\r\n    },\r\n    emits:['toggle-todo'],\r\n    setup(props, {emit}) {\r\n        const toggleTodo = (index) => {\r\n            emit('toggle-todo', index)\r\n        }\r\n        const deleteTodo = (index) => {\r\n            emit('delete-todo', index)\r\n        }\r\n        const todoStyle = { //:style로 \r\n            textDecoration: 'line-through',\r\n            color: 'gray',\r\n        };\r\n        return {\r\n            toggleTodo,\r\n            deleteTodo,\r\n            todoStyle,\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .todo{ /* css */\r\n        text-decoration: line-through;\r\n        color: gray;\r\n    }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}