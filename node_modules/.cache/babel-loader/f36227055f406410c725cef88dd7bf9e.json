{"ast":null,"code":"import { ref, computed } from 'vue';\nimport TodoSimpleForm from './components/TodoSimpleForm.vue';\nimport TodoList from './components/TodoList.vue';\nimport axios from 'axios';\nexport default {\n  name: 'App',\n  components: {\n    TodoSimpleForm,\n    TodoList\n  },\n\n  setup() {\n    const todos = ref([]);\n    const totalPage = ref(0);\n    const numOfTodos = ref(0);\n    const limit = 5;\n    const curPage = ref(1);\n    const numOfPages = computed(() => {\n      return Math.ceil(numOfTodos / limit);\n    });\n\n    const getTodo = async (page = curPage.value) => {\n      try {\n        const res = await axios.get(`http://localhost:3000/todos?_page=${page}&_limit=${limit}`);\n        todos.value = res.data;\n        totalPage.value = res.headers['x-total-count'];\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getTodo();\n\n    const addTodo = async todo => {\n      try {\n        const res = await axios.post('http://localhost:3000/todos', {\n          subject: todo.subject,\n          completed: todo.completed\n        });\n        todos.value.push(res.data);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const deleteTodo = async index => {\n      const id = todos.value[index].id;\n\n      try {\n        await axios.delete('http://localhost:3000/todos' + id);\n        todos.value.splice(index, 1);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const toggleTodo = async index => {\n      try {\n        await axios.patch('http://localhost:3000/todos' + index, {\n          completed: !todos.value[index].completed\n        });\n        todos.value[index].completed = !todos.value[index].completed;\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const searchText = ref('');\n    const filteredTodos = computed(() => {\n      if (searchText.value) {\n        return todos.value.filter(todo => {\n          return todo.subject.includes(searchText.value);\n        });\n      }\n\n      return todos.value;\n    });\n    return {\n      todos,\n      getTodo,\n      addTodo,\n      deleteTodo,\n      toggleTodo,\n      searchText,\n      filteredTodos,\n      numOfPages,\n      curPage,\n      getTodo\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","computed","TodoSimpleForm","TodoList","axios","name","components","setup","todos","totalPage","numOfTodos","limit","curPage","numOfPages","Math","ceil","getTodo","page","value","res","get","data","headers","err","console","error","addTodo","todo","post","subject","completed","push","deleteTodo","index","id","delete","splice","toggleTodo","patch","searchText","filteredTodos","filter","includes"],"sourceRoot":"","sources":["E:\\vue\\vue_todo\\src\\App.vue"],"sourcesContent":["<template>\n\n  <div class=\"container\">\n    <h2 class=\"strong\">To-Do List</h2>\n    <input type=\"text\" class=\"form-control\" v-model=\"searchText\" placeholder=\"Search\">\n    <hr>\n    <TodoSimpleForm @add-todo=\"addTodo\"></TodoSimpleForm>\n    <div v-if=\"!filteredTodos.length\"> Nothing </div>\n    <TodoList :todos=\"filteredTodos\" @toggle-todo=\"toggleTodo\" @delete-todo=\"deleteTodo\"></TodoList>\n\n    <hr>\n    <nav aria-label=\"Page navigation example\">\n      <ul class=\"pagination\">\n        <li class=\"page-item\" v-if=\"curPage !== 1\"\n         @click='getTodo(curPage-1)'><a class=\"page-link\" >Previous</a></li>\n       \n        <li v-for=\"page in numOfPages\" \n        :key=\"page\" :class=\"curPage === page? active:''\"\n        @click='getTodo(page)'\n        class=\"page-item\"><a class=\"page-link\" href=\"#\">{{ page }}</a></li>\n\n        <li class=\"page-item\" v-if=\"curPage !== numOfPages\"\n        @click='getTodo(curPage+1)'><a class=\"page-link\" >Next</a></li>\n      </ul>\n    </nav>\n\n  </div>\n\n</template>\n\n<script>\n  import {\n    ref,\n    computed\n  } from 'vue'\n  import TodoSimpleForm from './components/TodoSimpleForm.vue'\n  import TodoList from './components/TodoList.vue'\n  import axios from 'axios'\n\n  export default {\n    name: 'App',\n    components: {\n      TodoSimpleForm,\n      TodoList\n\n    },\n    setup() {\n      const todos = ref([]);\n      const totalPage = ref(0);\n      const numOfTodos = ref(0);\n      const limit = 5;\n      const curPage = ref(1);\n\n      const numOfPages = computed(()=>{\n        return Math.ceil(numOfTodos/limit)\n      })\n\n      const getTodo = async (page = curPage.value) => {\n        try {\n          const res = await axios.get(`http://localhost:3000/todos?_page=${page}&_limit=${limit}`)\n          todos.value = res.data;\n          totalPage.value = res.headers['x-total-count']\n\n        } catch (err) {\n          console.error(err)\n        }\n\n      }\n      getTodo();\n\n      const addTodo = async (todo) => {\n        try {\n          const res = await axios.post('http://localhost:3000/todos', {\n            subject: todo.subject,\n            completed: todo.completed,\n          })\n          todos.value.push(res.data);\n        } catch (err) {\n          console.error(err)\n        }\n\n      }\n      const deleteTodo = async (index) => {\n        const id = todos.value[index].id;\n        try {\n          await axios.delete('http://localhost:3000/todos' + id)\n          todos.value.splice(index, 1);\n\n        } catch (err) {\n          console.error(err)\n        }\n\n      }\n\n      const toggleTodo = async (index) => {\n        try {\n          await axios.patch('http://localhost:3000/todos' + index, {\n            completed: !todos.value[index].completed\n          })\n          todos.value[index].completed = !todos.value[index].completed\n\n        } catch (err) {\n          console.error(err)\n        }\n      }\n\n      const searchText = ref('');\n\n      const filteredTodos = computed(() => {\n        if (searchText.value) {\n          return todos.value.filter(todo => {\n            return todo.subject.includes(searchText.value)\n          });\n        }\n        return todos.value;\n      })\n\n      return {\n        todos,\n        getTodo,\n        addTodo,\n        deleteTodo,\n        toggleTodo,\n        searchText,\n        filteredTodos,\n        numOfPages,\n        curPage,\n        getTodo,\n      }\n    },\n\n  }\n</script>\n\n<style scoped>\nnav a{\n  cursor:pointer;\n}\n</style>"]},"metadata":{},"sourceType":"module"}