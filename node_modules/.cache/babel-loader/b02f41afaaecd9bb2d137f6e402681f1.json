{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3de47834\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  class: \"form-check flex-grow-1\"\n};\nconst _hoisted_3 = [\"checked\", \"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.todos, (todo, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: todo.id,\n      class: \"card mt-2\"\n    }, [_createElementVNode(\"div\", {\n      class: \"card-body p-2 d-flex align-items-center\",\n      style: {\n        \"cursor\": \"pointer\"\n      },\n      onClick: $event => $setup.moveToPage(todo.id)\n    }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      class: \"form-check-input\",\n      checked: todo.completed,\n      onClick: _withModifiers($event => $setup.toggleTodo(index, $event), [\"stop\"])\n    }, null, 8\n    /* PROPS */\n    , _hoisted_3), _createElementVNode(\"label\", {\n      for: \"\",\n      class: _normalizeClass([{\n        todo: todo.completed\n      }, \"form-check-label\"])\n    }, _toDisplayString(todo.subject), 3\n    /* TEXT, CLASS */\n    ), _createCommentVNode(\" :class=\\\"{todo: todo.completed}\\\" \\r\\n                    :style=\\\"todo.completed?todoStyle:{}\\\" \")]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-sm\",\n      onClick: _withModifiers($event => $setup.deleteTodo(index), [\"stop\"])\n    }, \"Delete\", 8\n    /* PROPS */\n    , _hoisted_4)])], 8\n    /* PROPS */\n    , _hoisted_1)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;;;;;AAOqBA,OAAK,EAAC;;;;;uBANvBC,oBAyBM,KAzBN,EAyBM,IAzBN,EAyBM,oBAxBFA,oBAuBMC,SAvBN,EAuBM,IAvBN,EAuBMC,YAvBuBC,YAuBvB,EAvB4B,CAArBC,IAAqB,EAAfC,KAAe,KAAV;yBAAxBL,oBAuBM,KAvBN,EAuBM;AAvB+BM,SAAG,EAAEF,IAAI,CAACG,EAuBzC;AAvB6CR,WAAK,EAAC;AAuBnD,KAvBN,GAEIS,oBAmBM,KAnBN,EAmBM;AAnBDT,WAAK,EAAC,yCAmBL;AAlBNU,WAAuB,EAAvB;AAAA;AAAA,OAkBM;AAjBLC,aAAK,YAAEC,kBAAWP,IAAI,CAACG,EAAhB;AAiBF,KAnBN,GAGIC,oBAWM,KAXN,cAWM,CAVFA,oBAGwC,OAHxC,EAGwC;AAHjCI,UAAI,EAAC,UAG4B;AAFxCb,WAAK,EAAC,kBAEkC;AADvCc,aAAO,EAAET,IAAI,CAACU,SACyB;AAAvCJ,aAAK,2BAAOC,kBAAWN,KAAX,EAAkBU,MAAlB,CAAP,EAA+B,QAA/B;AAAkC,KAHxC;;AAAA,iBAUE,EANFP,oBAG0B,OAH1B,EAG0B;AAHnBQ,SAAG,EAAC,EAGe;AAFzBjB,WAAK;AAAAK,cAASA,IAAI,CAACU;AAAd,SACC,kBADD;AAEoB,KAH1B,mBAGGV,IAAI,CAACa,QAHR,EAGe;AAAA;AAHf,KAME,EAFDC,yHAEC,CAXN,GAYAV,oBAGM,KAHN,EAGM,IAHN,EAGM,CAFFA,oBAC+C,QAD/C,EAC+C;AADvCT,WAAK,EAAC,uBACiC;AAA9CW,aAAK,2BAAOC,kBAAWN,KAAX,CAAP,EAAuB,QAAvB;AAAyC,KAD/C,EACgC,QADhC,EACsC;AAAA;AADtC,MACsCc,UADtC,CAEE,CAHN,EAfJ;;AAAA,kBAFJ;GAuBM,CAvBN;;AAAA,GAwBE,EAzBN","names":["class","_createElementBlock","_Fragment","_renderList","$props","todo","index","key","id","_createElementVNode","style","onClick","$setup","type","checked","completed","$event","for","subject","_createCommentVNode","_hoisted_4"],"sourceRoot":"","sources":["E:\\vue\\vue_todo\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div v-for=\"(todo, index) in todos\" :key=\"todo.id\" class=\"card mt-2\">\r\n\r\n            <div class=\"card-body p-2 d-flex align-items-center\"\r\n            style=\"cursor: pointer\"\r\n            @click=\"moveToPage(todo.id)\">\r\n                <div class=\"form-check flex-grow-1\">\r\n                    <input type=\"checkbox\" \r\n                    class=\"form-check-input\" \r\n                    :checked=\"todo.completed\"\r\n                    @click.stop=\"toggleTodo(index, $event)\">\r\n                    <label for=\"\" \r\n                    :class=\"{todo: todo.completed}\" \r\n                     class=\"form-check-label\"> \r\n                    {{ todo.subject }}</label>\r\n                     <!-- :class=\"{todo: todo.completed}\" \r\n                    :style=\"todo.completed?todoStyle:{}\" -->\r\n                </div>\r\n                <div>\r\n                    <button class=\"btn btn-danger btn-sm\"\r\n                    @click.stop=\"deleteTodo(index)\">Delete</button>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRouter } from 'vue-router'\r\nexport default {\r\n    props: {\r\n        todos: {\r\n            type: Array,\r\n            required: true,\r\n            completed: false,\r\n        }\r\n    },\r\n    emits:['toggle-todo', 'delete-todo'],\r\n    setup(props, {emit}) {\r\n        const router = useRouter();\r\n        const toggleTodo = (index, e) => {\r\n            emit('toggle-todo', index, e.target.checked)\r\n        }\r\n        const deleteTodo = (index) => {\r\n            emit('delete-todo', index)\r\n        }\r\n        const moveToPage = (todoId) => {\r\n            router.push({\r\n                name: 'Todo',\r\n                params : {\r\n                    id: todoId\r\n                }\r\n            })\r\n        }\r\n        const todoStyle = { //:style\r\n            textDecoration: 'line-through',\r\n            color: 'gray',\r\n        };\r\n        return {\r\n            toggleTodo,\r\n            deleteTodo,\r\n            moveToPage,\r\n            todoStyle,\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .todo{ /* :class */\r\n        text-decoration: line-through;\r\n        color: gray;\r\n    }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}