{"ast":null,"code":"import { ref, computed } from '@vue/reactivity';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport Toast from '@/components/Toast.vue';\nexport default {\n  components: {\n    Toast\n  },\n\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const todo = ref(null);\n    const originalTodo = ref(null);\n    const loading = ref(true);\n    const showToast = ref(false);\n    const toastMessage = ref('');\n    const toastAlertType = ref('');\n    const todoId = route.params.id;\n\n    const getTodo = async () => {\n      try {\n        const res = await axios.get('http://localhost:3000/todos/' + todoId);\n        todo.value = { ...res.data\n        };\n        originalTodo.value = { ...res.data\n        };\n        loading.value = false;\n      } catch (err) {\n        console.log(err);\n        triggerToast(err, 'danger');\n      }\n    };\n\n    const todoUpdated = computed(() => {\n      return !_.isEqual(todo.value, originalTodo.value);\n    });\n\n    const toggleTodoStatus = () => {\n      todo.completed = !todo.completed;\n    };\n\n    const goTodoListPage = () => {\n      router.push({\n        name: 'Todos'\n      });\n    };\n\n    const triggerToast = (message, type = 'success') => {\n      showToast.value = true;\n      toastAlertType.value = type;\n      toastMessage.value = message;\n      setTimeout(() => {\n        toastMessage.value = '';\n        showToast.value = false;\n        toastAlertType.value = '';\n      }, 3000);\n    };\n\n    getTodo();\n\n    const onSave = async () => {\n      const res = await axios.put(`http://localhost:3000/todos/${todoId}`, {\n        subject: todo.value.subject,\n        completed: todo.value.completed\n      });\n      originalTodo.value = { ...res.data\n      };\n      triggerToast('잘 저장되었단다');\n    };\n\n    return {\n      todo,\n      loading,\n      toggleTodoStatus,\n      goTodoListPage,\n      onSave,\n      todoUpdated,\n      showToast,\n      triggerToast,\n      toastMessage,\n      toastAlertType\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","computed","useRoute","useRouter","axios","_","Toast","components","setup","route","router","todo","originalTodo","loading","showToast","toastMessage","toastAlertType","todoId","params","id","getTodo","res","get","value","data","err","console","log","triggerToast","todoUpdated","isEqual","toggleTodoStatus","completed","goTodoListPage","push","name","message","type","setTimeout","onSave","put","subject"],"sourceRoot":"","sources":["E:\\vue\\vue_todo\\src\\pages\\todos\\_id.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <h1>Todo Page</h1>\r\n        <div v-if=\"loading\">\r\n            Loading...\r\n        </div>\r\n        <form v-else\r\n        @submit.prevent=\"onSave\">\r\n            <div class=\"row mb-2\">\r\n                <div class=\"col-6\">\r\n                     <div class=\"form-group\">\r\n                        <label for=\"\">Subject</label>\r\n                        <input v-model=\"todo.subject\" type=\"text\" class=\"form-control\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                     <div class=\"form-group\">\r\n                        <label for=\"\">Status</label>\r\n                            <div>\r\n                                <button class=\"btn \"\r\n                                :class= \"todo.completed ? 'btn-success' : 'btn-danger'\"\r\n                                @click.self.prevent=\"toggleTodoStatus\"> \r\n                                {{ todo.completed ? 'Completed' : 'Incomplete'}}\r\n                                \r\n                                </button>\r\n                           \r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled = \"todoUpdated\">\r\n                저장</button>\r\n            <button type=\"submit\" class=\"btn btn-outline-dark ms-2\"\r\n            @click=\"goTodoListPage\">\r\n                취소</button>\r\n        </form>\r\n        <Toast style=\"z-index:999\"\r\n            v-if=\"showToast\"\r\n            :message=\"toastMessage\"\r\n            :type=\"toastAlertType\"\r\n        />\r\n    </div>\r\n</template>\r\n<script>\r\nimport { ref, computed } from '@vue/reactivity';\r\nimport { useRoute,useRouter } from 'vue-router'\r\nimport axios from 'axios'\r\nimport _ from 'lodash'\r\nimport Toast from '@/components/Toast.vue';\r\n\r\nexport default {\r\n    components: {\r\n        Toast,\r\n    },\r\n    setup(){\r\n        const route = useRoute();\r\n        const router = useRouter();\r\n        const todo = ref(null);\r\n        const originalTodo = ref(null);\r\n        const loading = ref(true);\r\n\r\n        const showToast = ref(false);\r\n        const toastMessage = ref('');\r\n        const toastAlertType = ref('');\r\n            \r\n        const todoId = route.params.id;\r\n\r\n\r\n        const getTodo = async() => {\r\n            try { \r\n                const res = await axios.get('http://localhost:3000/todos/'+ todoId);\r\n\r\n                todo.value = { ...res.data };\r\n                originalTodo.value = { ...res.data };\r\n\r\n                loading.value = false;\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n                triggerToast(err, 'danger');\r\n            }\r\n\r\n        }\r\n        const todoUpdated = computed(() => {\r\n            return !_.isEqual(todo.value, originalTodo.value)\r\n        })\r\n\r\n        const toggleTodoStatus = () => {\r\n            todo.completed = !todo.completed\r\n        }\r\n        const goTodoListPage = () => {\r\n            router.push({\r\n                name:'Todos'\r\n            })\r\n        }\r\n\r\n        const triggerToast = (message, type = 'success') => {\r\n          showToast.value = true;\r\n          toastAlertType.value=type;\r\n          toastMessage.value=message;\r\n\r\n          setTimeout(() => {\r\n\r\n            toastMessage.value='';\r\n            showToast.value= false;\r\n            toastAlertType.value='';\r\n            \r\n          }, 3000)\r\n        };\r\n\r\n        getTodo();\r\n\r\n        const onSave = async() =>{\r\n            const res = await axios.put(`http://localhost:3000/todos/${todoId}`,{\r\n                subject : todo.value.subject,\r\n                completed : todo.value.completed\r\n            })\r\n            originalTodo.value = {...res.data}\r\n            triggerToast('잘 저장되었단다')\r\n        }\r\n        \r\n        return {\r\n            todo,\r\n            loading,\r\n            toggleTodoStatus,\r\n            goTodoListPage,\r\n            onSave,\r\n            todoUpdated,\r\n            showToast,\r\n            triggerToast,\r\n            toastMessage,\r\n            toastAlertType,\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}